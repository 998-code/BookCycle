<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace:绑定一个作用的接口-->
<mapper namespace="com.wcm533.dao.BookMapper">
    <insert id="addBook" parameterType="book">
        insert into book (name,author,stock,loan,points,img_path) values (#{name},#{author},#{stock},#{loan},#{points},#{bookImg})
    </insert>
    <select id="queryNewBookId" parameterType="map" resultType="int">
        select max(id) from book where name=#{name} order by id desc
    </select>
    <delete id="deleteBook" parameterType="map">
        delete from book where id=#{id}
    </delete>
    <update id="updateBook" parameterType="book">
        update book set name=#{name},author=#{author},stock=#{stock},loan=#{loan},points=#{points},img_path=#{bookImg} where id=#{id}
    </update>
    <select id="queryAllBooks" resultType="book">
        select * from book
    </select>
    <select id="queryBookByAuthor" parameterType="map" resultType="book">
        select * from book where author like "%"#{author}"%" limit #{begin},#{pageSize}
    </select>
    <select id="queryBookById" parameterType="map" resultType="book">
        select * from book where id=#{id}
    </select>
    <select id="queryBookByBookName" parameterType="map" resultType="book">
        select * from book where name=#{bookName}
    </select>
    <select id="queryBookByName" parameterType="map" resultType="book">
        select * from book where name like "%"#{name}"%" limit #{begin},#{pageSize}
    </select>
    <select id="queryBooksByInfo" parameterType="map" resultType="book">
        select * from book where CONCAT(author,name) like "%"#{info}"%" limit #{begin},#{pageSize}
    </select>
    <select id="queryBookCountByInfo" parameterType="map" resultType="int">
        select count(*) from book where CONCAT(author,name) like "%"#{info}"%"
    </select>
    <select id="queryBookByClassification" parameterType="map" resultType="book">
        select * from book where classification = #{classification}
    </select>
    <select id="queryForPageTotalCount" resultType="int">
        select count(*) from book
    </select>
    <select id="queryForByPage" parameterType="map" resultType="book">
        select * from book order by id desc limit #{begin},#{pageSize}
    </select>
    <select id="queryForPageTotalCountByClassification" parameterType="map" resultType="int">
        select count(*) from book where points = #{classification}
    </select>
    <select id="queryForPageByClassification" parameterType="map" resultType="book">
        select * from book where points =#{classification} order by points limit #{begin},#{pageSize}
    </select>
</mapper>